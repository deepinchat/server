name: Monolith API Build and Deployment

on:
  push:
    branches:
      - master
      - develop
      - 'feature/**'
    paths-ignore:
      - 'src/Deepin.IdentityServer/**'
      - 'src/Deepin.Internal.SDK/**'
      - '.github/workflows/build-deploy-identity-server.yaml'

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Login to DockerHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./src/Deepin.API/Dockerfile
          push: true
          tags: |
            ${{ vars.DOCKER_USERNAME }}/monolith-service:latest
            ${{ vars.DOCKER_USERNAME }}/monolith-service:${{ github.sha }}

  update-deployment-repo:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ vars.DEPLOYMENT_REPOSITORY }}
          token: ${{ secrets.TOKEN }}

      - name: Update deployment file and Push changes
        run: |
          BRANCH_NAME=deployment/monolith-service/${{ github.sha }}
          git config user.identity "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git checkout -b $BRANCH_NAME
          sed --in-place 's|image: .*$|image: ${{ vars.DOCKER_USERNAME }}/monolith-service:${{ github.sha }}|' argocd/monolith-service/base/deployment.yaml
          sed --in-place 's|newTag: .*$|newTag: ${{ github.sha }}|' argocd/monolith-service/az-sg/kustomization.yaml
          git add .
          git commit -m "Update monolith-service image tag to ${{ github.sha }}"
          git push origin $BRANCH_NAME

      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const branchName = 'deployment/monolith-service/${{ github.sha }}';
            const repo = '${{ vars.DEPLOYMENT_REPOSITORY }}';
            
            // 1. find and close old PRs
            try {
              const { data: existingPRs } = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: repo,
                state: 'open',
                base: 'master'
              });
              
              // filter existing PRs for monolith-service deployments
              const apiServicePRs = existingPRs.filter(pr => 
                pr.head.ref.startsWith('deployment/monolith-service/') && 
                pr.head.ref !== branchName
              );
              
              // close old PRs
              for (const pr of apiServicePRs) {
                console.log(`Closing old PR #${pr.number}: ${pr.title}`);
                await github.rest.pulls.update({
                  owner: context.repo.owner,
                  repo: repo,
                  pull_number: pr.number,
                  state: 'closed'
                });
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: repo,
                  issue_number: pr.number,
                  body: `ðŸ”„ Automatically closed due to newer monolith-service deployment.\n\nNew commit: ${{ github.sha }}`
                });
              }
            } catch (error) {
              console.log('Error closing existing PRs:', error.message);
            }
            
            // 2. create new PR
            const { data: pullRequest } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: repo,
              title: 'ðŸš€ Deploy monolith-service: ${{ github.sha }}',
              head: branchName,
              base: 'master',
              body: `## Monolith Service Deployment
            
            **Commit:** ${{ github.sha }}
            **Branch:** ${{ github.ref }}
            **Workflow:** ${{ github.workflow }}
            
            ### Changes
            - Updated monolith-service image to: \`${{ vars.DOCKER_USERNAME }}/monolith-service:${{ github.sha }}\`
            
            ### Auto-generated by GitHub Actions
            This PR was automatically created by the CI/CD pipeline.`,
              draft: false,
              maintainer_can_modify: true
            });
            
            // 3. add labels to the PR
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: repo,
              issue_number: pullRequest.number,
              labels: ['deployment', 'monolith-service']
            });
            
            console.log(`Created new PR #${pullRequest.number}`);
            core.setOutput('pull-request-number', pullRequest.number);
